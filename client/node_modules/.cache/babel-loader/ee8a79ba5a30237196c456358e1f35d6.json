{"ast":null,"code":"var _jsxFileName = \"/Users/jsilver/Desktop/google-books-search/client/src/pages/Books.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchForm from \"../components/SearchForm\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport BookResults from \"../components/BookResults\";\n\nclass Books extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      books: [],\n      error: \"\",\n      message: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getGoogleSearchBooks(this.state.search).then(res => {\n        let books = res.data.items;\n        books = books.map(book => {\n          book = {\n            key: book.id,\n            id: book.id,\n            title: book.volumeInfo.title,\n            author: book.volumeInfo.authors,\n            description: book.volumInfo.description,\n            image: book.volumeInfo.imageLinks.thumbnail,\n            link: book.volumeInfo.infoLink\n          };\n          return book;\n        });\n        this.setState({\n          books: books,\n          error: \"\"\n        });\n      }).catch(err => this.setState({\n        error: err.items\n      }));\n    };\n\n    this.handleSavedButton = event => {\n      event.preventDefault();\n      let booksSaved = this.state.books.filter(bookSaved => bookSaved.id === event.target.id);\n      booksSaved = booksSaved[0];\n      API.saveBook(booksSaved).then(this.setState({\n        message: alert(\"This book has been saved\")\n      })).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Google Book Search\")), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SearchForm, {\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BookResults, {\n      books: this.state.books,\n      handleSavedButton: this.handleSavedButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/jsilver/Desktop/google-books-search/client/src/pages/Books.js"],"names":["React","Component","API","Jumbotron","SearchForm","Container","Row","Col","BookResults","Books","state","search","books","error","message","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","getGoogleSearchBooks","then","res","data","items","map","book","key","id","title","volumeInfo","author","authors","description","volumInfo","image","imageLinks","thumbnail","link","infoLink","catch","err","handleSavedButton","booksSaved","filter","bookSaved","saveBook","alert","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchForm from \"../components/SearchForm\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport BookResults from \"../components/BookResults\";\n\nclass Books extends Component {\n    state = {\n        search: \"\",\n        books: [],\n        error: \"\",\n        message: \"\"\n    };\n\n    handleInputChange = event => {\n        this.setState({ search: event.target.value });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        API.getGoogleSearchBooks(this.state.search)\n            .then(res => {\n                let books = res.data.items;\n                books = books.map(book => {\n                    book = {\n                        key: book.id,\n                        id: book.id,\n                        title: book.volumeInfo.title,\n                        author: book.volumeInfo.authors,\n                        description: book.volumInfo.description,\n                        image: book.volumeInfo.imageLinks.thumbnail,\n                        link: book.volumeInfo.infoLink\n                    };\n                    return book;\n                })\n                this.setState({ books: books, error: \"\" });\n            }).catch(err => this.setState({ error: err.items }));\n    }\n\n    handleSavedButton = event => {\n        event.preventDefault();\n        let booksSaved = this.state.books.filter(bookSaved => bookSaved.id === event.target.id);\n        booksSaved = booksSaved[0];\n        API.saveBook(booksSaved).then(this.setState({ message: alert(\"This book has been saved\") })).catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <Container fluid={true}>\n                <Jumbotron>\n                    <h1>Google Book Search</h1>\n                </Jumbotron>\n                <Container>\n                    <Row>\n                        <Col size=\"12\">\n                            <SearchForm handleFormSubmit={this.handleFormSubmit} handleInputChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </Container>\n                <br />\n                <Container>\n                    <BookResults books={this.state.books} handleSavedButton={this.handleSavedButton} />\n                </Container>\n            </Container>\n\n        )\n    }\n\n\n}\n\nexport default Books;"]},"metadata":{},"sourceType":"module"}